{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Feedback/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","buttonswrap","map","option","type","button","status","onClick","Statistics","good","neutral","bad","total","positivePercentage","statresults","Section","title","children","section","Notification","message","App","state","handleFeedback","setState","prevState","countTotal","countPositivePercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,OAAS,2B,gBCA3BD,EAAOC,QAAU,CAAC,YAAc,kC,oBCAhCD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,qKCEb,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKC,UAAWC,IAAEC,YAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLL,UAAWC,IAAEK,OAEbC,OAAQH,EACRI,QAAS,kBAAMT,EAAgBK,IALjC,SAOGA,GAJIA,Q,oBCPA,SAASK,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,QAEZ,oBAAGZ,UAAWC,IAAEc,YAAhB,oBAAqCF,KACrC,oBAAGb,UAAWC,IAAEc,YAAhB,uBAAwCD,EAAxC,U,oBCDSE,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASlB,UAAWC,IAAEkB,QAAtB,UACE,6BAAKF,IACJC,M,iBCLQ,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,oBAAIrB,UAAWC,IAAEoB,QAAjB,SAA2BA,I,ICG9BC,E,4MACJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,eAAiB,SAAApB,GACf,EAAKqB,UAAS,SAAAC,GAAS,sBACpBtB,EAASsB,EAAUtB,GAAU,O,EAIlCuB,WAAa,WACX,MAA+B,EAAKJ,MACpC,OADA,EAAQb,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBgB,wBAA0B,WACxB,IAAQlB,EAAS,EAAKa,MAAdb,KACR,OAAOmB,KAAKC,MAAOpB,EAAO,EAAKiB,aAAgB,MAAQ,G,4CAGzD,WACE,MAA+BI,KAAKR,MAA5Bb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,gCACE,cAAC,EAAD,CAASK,MAAM,wBAAf,SACE,cAACpB,EAAD,CACEC,QAASkC,OAAOC,KAAKF,KAAKR,OAC1BxB,gBAAiBgC,KAAKP,mBAGH,IAAtBO,KAAKJ,aACJ,cAACP,EAAD,CAAcC,QAAQ,yBAEtB,cAAC,EAAD,CAASJ,MAAM,aAAf,SACE,cAACR,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,KAAKJ,aACZb,mBAAoBiB,KAAKH,qC,GA1CrBM,aAmDHZ,ICpDfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc5743b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__2Zq87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statresults\":\"Statistics_statresults__1t8uH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1D18S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3dB7n\"};","import PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.buttonswrap}>\n      {options.map(option => (\n        <button\n          type=\"button\"\n          className={s.button}\n          key={option}\n          status={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\nFeedbackOptions.propTypes = {\n  option: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div>\n      <ul>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n      </ul>\n      <p className={s.statresults}>Total: {total}</p>\n      <p className={s.statresults}>Positive: {positivePercentage}%</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <h2 className={s.message}>{message}</h2>;\n}\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/Feedback';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotal = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositivePercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.countTotal()) * 100) || 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <Section title=\"Please Leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n        {this.countTotal() === 0 ? (\n          <Notification message=\"There is no feedback\"></Notification>\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotal()}\n              positivePercentage={this.countPositivePercentage()}\n            />\n          </Section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}